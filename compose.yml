name: pms

services:
  # qBittorrent bittorrent client
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    hostname: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8600
      - TORRENTING_PORT=54321
    ports:
      - 8600:8600
      - 54321:54321
    volumes:
      - qbittorrent-config:/config
      - ${HOST_DOWNLOADS}:/data/downloads

  # SABnzbd usenet downloader
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    hostname: sabnzbd
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - sabnzbd-config:/config
      - ${HOST_DOWNLOADS}:/data/downloads
      - ${HOST_BACKUP}/sabnzbd:/backup
    labels:
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)
      - traefik.http.routers.sabnzbd.entrypoints=websecure
      - traefik.http.routers.sabnzbd.tls.certresolver=cfdnsresolver
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080

  # Jackett torrent indexer
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    hostname: jackett
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8602:9117
    volumes:
      - jackett-config:/config

  # Postgres database
  postgres:
    image: postgres:14
    hostname: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${ADMIN_PASSWORD}
      - TZ=${TZ}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # pgAdmin web interface for Postgres
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - 8603:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

  # Sonarr TV show manager
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8604:8989
    volumes:
      - sonarr-config:/config
      - ${HOST_DOWNLOADS}:/data/downloads
      - ${HOST_MEDIA}/tv:/data/media/tv
      - ${HOST_BACKUP}/sonarr:/backup
    depends_on:
      - postgres
      - qbittorrent
      - sabnzbd
      - jackett

  # Radarr movie manager
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8605:7878
    volumes:
      - radarr-config:/config
      - ${HOST_DOWNLOADS}:/data/downloads
      - ${HOST_MEDIA}/movies:/data/media/movies
      - ${HOST_BACKUP}/radarr:/backup
    depends_on:
      - postgres
      - qbittorrent
      - sabnzbd
      - jackett

  # Lidarr music manager
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8606:8686
    volumes:
      - lidarr-config:/config
      - ${HOST_DOWNLOADS}:/data/downloads
      - ${HOST_MEDIA}/music:/data/media/music
      - ${HOST_BACKUP}/lidarr:/backup
    depends_on:
      - postgres
      - qbittorrent
      - sabnzbd
      - jackett

  # Plex media server
  plex:
    image: lscr.io/linuxserver/plex:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
    volumes:
      - plex-config:/config
      - ${HOST_MEDIA}:/data/media
      - ${HOST_BACKUP}/plex:/backup

  # Traefik reverse proxy
  traefik:
    image: traefik:v3.4
    restart: unless-stopped
    environment:
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_ENTRYPOINTS_TRAEFIK_ADDRESS=:7000
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:7080
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:7443
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_CERTIFICATESRESOLVERS_CFDNSRESOLVER_ACME_DNSCHALLENGE_PROVIDER=cloudflare
      - TRAEFIK_CERTIFICATESRESOLVERS_CFDNSRESOLVER_ACME_EMAIL=${ADMIN_EMAIL}
      - TRAEFIK_CERTIFICATESRESOLVERS_CFDNSRESOLVER_ACME_STORAGE=/certs/acme.json
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    ports:
      - 7000:7000 # Dashboard
      - 7080:7080 # HTTP
      - 7443:7443 # HTTPS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certs:/certs

networks:
  default:
    name: pms

volumes:
  qbittorrent-config:
    driver: local
  sabnzbd-config:
    driver: local
  jackett-config:
    driver: local
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  sonarr-config:
    driver: local
  radarr-config:
    driver: local
  lidarr-config:
    driver: local
  plex-config:
    driver: local
  traefik-certs:
    driver: local
