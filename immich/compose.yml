name: immich

services:
  # Postgres database with vector support
  database:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      - database-data:/var/lib/postgresql/data

  # Redis compatible cache
  cache:
    image: valkey/valkey:8
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1

  # Immich server
  server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - DB_HOSTNAME=database
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DATABASE_NAME=${POSTGRES_DB}
      - REDIS_HOSTNAME=cache
    ports:
      - 2283:2283
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - database
      - cache
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`immich.${DOMAIN}`)
      - traefik.http.routers.prowlarr.tls.certresolver=cloudflare

  # Immich machine learning service
  machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    restart: unless-stopped
    volumes:
      - model-cache:/cache

networks:
  default:
    name: immich
    driver: bridge

volumes:
  database-data:
    driver: local
  model-cache:
    driver: local
